" SETTINGS --------------------------------------------------------------- {{{

    " XDG compliance
    set runtimepath^=$XDG_CONFIG_HOME/vim
    set runtimepath+=$XDG_DATA_HOME/vim
    set runtimepath+=$XDG_CONFIG_HOME/vim/after

    set packpath^=$XDG_DATA_HOME/vim,$XDG_CONFIG_HOME/vim
    set packpath+=$XDG_CONFIG_HOME/vim/after,$XDG_DATA_HOME/vim/after

    let g:netrw_home = $XDG_DATA_HOME."/vim"
    call mkdir($XDG_DATA_HOME."/vim/spell", 'p')
    set viewdir=$XDG_DATA_HOME/vim/view | call mkdir(&viewdir, 'p')

    set backupdir=$XDG_CACHE_HOME/vim/backup | call mkdir(&backupdir, 'p')
    set directory=$XDG_CACHE_HOME/vim/swap | call mkdir(&directory,'p')
    set undodir=$XDG_CACHE_HOME/vim/undo | call mkdir(&undodir, 'p')

    if !has('nvim') | set viminfofile=$XDG_STATE_HOME/vim/viminfo | endif

    " Disable compatibility with Vi, which can cause unexpected issues.
    set nocompatible

    " Set to no swap files.
    set noswapfile

    " Set to no backup files.
    set nobackup

    " Turn syntax highlight on.
    syntax on

    " Enable true-color
    set termguicolors

    " To enable truecolor in some terminals such as alacritty and st
    " https://stackoverflow.com/questions/62702766/termguicolors-in-vim-makes-everything-black-and-white
    " :h xterm-true-color
    let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
    let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"

    " Enable Gruvbox theme
    autocmd vimenter * ++nested colorscheme gruvbox

    " Set Gruvbox dark mode
    set background=dark

    " Use darker background for gruvbox colorscheme
    let g:gruvbox_contrast_dark = "hard"

    " Scroll before reaching the end of the file.
    set scrolloff=8

    " Add relative numbers to each line on the left-hand side.
    set relativenumber

    " Set the number of the current line on the left-hand side.
    set nu

    " Alows switching between tabs without having to save the current one.
    set hidden

    " Highlight cursor line underneath the cursor horizontally.
    set cursorline

    " Set shift width to 4 spaces.
    set shiftwidth=4

    " Set tab width to 4 columns.
    set tabstop=4

    " Use space characters instead of tabs.
    set expandtab

    " Backspace erases tab spaces.
    set softtabstop=4

    " While searching through a file incrementally highlight matching characters as you type.
    set incsearch

    " Show matching words during a search.
    set showmatch

    " Use highlighting when doing a search.
    set hlsearch

    " Don't highlight after the search is finished.
    set nohlsearch

    " Ignore capital letters during search.
    set ignorecase

    " When ignorecase is on, this will allow you to search specifically for capital letters.
    set smartcase

    " Enable type file detection. Vim will be able to try to detect the type of file un use.
    filetype on

    " Load an indent file for the detected file type.
    filetype indent on

    " Enable builtin file browsing
    filetype plugin on

    " Search down into subfolders. Provides tab-completion for all file-related tasks.
    set path+=**

    " Enable autocompletion menu after pressing TAB.
    set wildmenu

    " Make wildmenu behave similar to Bash completion.
    set wildmode=list,longest

    " Wildmenu will ignore files with these extensions.
    set wildignore=*.jpg,*.png,*.gif,*.pdf

    " Set a popup menu to show possible completions.
    set completeopt=longest,menuone

    " Change delay after hitting <esc> `O` keys
    set timeoutlen=1000
    set ttimeoutlen=50

    " Disable Netrw
    let g:loaded_netrw = 1
    let g:loaded_netrwPlugin = 1

    " Display unprintable characters f12 - switches
    set list

    " Unprintable chars mapping
    set listchars=tab:•\ ,trail:•,extends:»,precedes:« 

" }}}


" MAPPINGS --------------------------------------------------------------- {{{

    " use ctrl+[hjkl] no navigate between splits
    map <C-h> <C-w>h
    map <C-j> <C-w>j
    map <C-k> <C-w>k
    map <C-l> <C-w>l

    " NERDTree toggle Ctrl+a
    nnoremap <C-a> :NERDTreeToggle<CR>

" }}}


" VIMSCRIPT -------------------------------------------------------------- {{{

    " This will enable code folding. Use the marker method of folding.
    augroup filetype_vim
        autocmd!
        autocmd FileType vim setlocal foldmethod=marker
    augroup END

    " If Vim version is equal to or greater than 7.3 enable undofile.
    " This allows you to undo changes to a file even after saving it.
    if version >= 703
        set undodir=~/.config/vim/backup
        set undofile
        set undoreload=10000
    endif

" }}}


" STATUS LINE ------------------------------------------------------------ {{{

    " Does NOT show the mode, it is already at the status bar
    set noshowmode

    " Show the status on the second to last line.
    set laststatus=2

    " No separators
    let g:airline_left_sep = ''
    let g:airline_right_sep = ''

    " Only percentage
    let g:airline_section_z = '%p%%'

    " Enable tabs
    let g:airline#extensions#tabline#enabled = 1
    let g:airline#extensions#tabline#formatter = 'unique_tail_improved'

    " Remove whitespace warnings
    let g:airline#extensions#whitespace#enabled = 0

" }}}


" PLUGINS ------------------------------------------------------------ {{{

    " Configuration file for Conquer Of Completion
    source $XDG_CONFIG_HOME/vim/pack/coc/start/coc.nvimrc

    " Change global configuration file path
    let g:coc_config_home = '$XDG_CONFIG_HOME/vim/pack/coc'
    let g:coc_data_home = '$XDG_DATA_HOME/vim/coc'

" }}}
